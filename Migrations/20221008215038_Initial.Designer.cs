// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SpeedokuRoyaleServer.Models.DbContexts;

#nullable disable

namespace SpeedokuRoyaleServer.Migrations
{
    [DbContext(typeof(MariaDbContext))]
    [Migration("20221008215038_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("SpeedokuRoyaleServer.Models.Inventory", b =>
                {
                    b.Property<ulong?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong>("ItemId")
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong>("PlayerId")
                        .HasColumnType("bigint unsigned");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("PlayerId");

                    b.ToTable("Inventories");
                });

            modelBuilder.Entity("SpeedokuRoyaleServer.Models.Item", b =>
                {
                    b.Property<ulong?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned");

                    b.Property<int>("Rarity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("SpeedokuRoyaleServer.Models.MultiplayerGame", b =>
                {
                    b.Property<ulong?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("MultiplayerGames");
                });

            modelBuilder.Entity("SpeedokuRoyaleServer.Models.MultiplayerSession", b =>
                {
                    b.Property<ulong?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong>("MultiplayerGameId")
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong>("PlayerId")
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong>("Score")
                        .HasColumnType("bigint unsigned");

                    b.HasKey("Id");

                    b.HasIndex("MultiplayerGameId");

                    b.HasIndex("PlayerId");

                    b.ToTable("MultiplayerSessions");
                });

            modelBuilder.Entity("SpeedokuRoyaleServer.Models.Player", b =>
                {
                    b.Property<ulong?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Players");
                });

            modelBuilder.Entity("SpeedokuRoyaleServer.Models.SingleplayerGame", b =>
                {
                    b.Property<ulong?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<ulong>("PlayerId")
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong>("Score")
                        .HasColumnType("bigint unsigned");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId");

                    b.ToTable("SingleplayerGames");
                });

            modelBuilder.Entity("SpeedokuRoyaleServer.Models.Inventory", b =>
                {
                    b.HasOne("SpeedokuRoyaleServer.Models.Item", "Item")
                        .WithMany("Inventories")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SpeedokuRoyaleServer.Models.Player", "Player")
                        .WithMany("Inventories")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("SpeedokuRoyaleServer.Models.MultiplayerSession", b =>
                {
                    b.HasOne("SpeedokuRoyaleServer.Models.MultiplayerGame", "MultiplayerGame")
                        .WithMany("MultiplayerSessions")
                        .HasForeignKey("MultiplayerGameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SpeedokuRoyaleServer.Models.Player", "Player")
                        .WithMany("MultiplayerSessions")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MultiplayerGame");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("SpeedokuRoyaleServer.Models.SingleplayerGame", b =>
                {
                    b.HasOne("SpeedokuRoyaleServer.Models.Player", "Player")
                        .WithMany("SingleplayerGame")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");
                });

            modelBuilder.Entity("SpeedokuRoyaleServer.Models.Item", b =>
                {
                    b.Navigation("Inventories");
                });

            modelBuilder.Entity("SpeedokuRoyaleServer.Models.MultiplayerGame", b =>
                {
                    b.Navigation("MultiplayerSessions");
                });

            modelBuilder.Entity("SpeedokuRoyaleServer.Models.Player", b =>
                {
                    b.Navigation("Inventories");

                    b.Navigation("MultiplayerSessions");

                    b.Navigation("SingleplayerGame");
                });
#pragma warning restore 612, 618
        }
    }
}
